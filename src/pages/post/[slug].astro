---
import Layout from '../../layouts/Layout.astro';
import { readdir, readFile } from 'fs/promises';
import { join } from 'path';

// Get all possible blog slugs for static generation
export async function getStaticPaths() {
  const blogDir = join(process.cwd(), 'src/content/blog');
  const blogFiles = await readdir(blogDir);
  
  return blogFiles
    .filter(file => file.endsWith('.md'))
    .map(file => ({
      params: { slug: file.replace('.md', '') }
    }));
}

// Get the current blog post data
const { slug } = Astro.params;
const blogDir = join(process.cwd(), 'src/content/blog');
const blogPath = join(blogDir, `${slug}.md`);

// Read and parse the markdown file
const content = await readFile(blogPath, 'utf-8');
const frontmatterMatch = content.match(/^---\n([\s\S]*?)\n---\n([\s\S]*)$/);

if (!frontmatterMatch) {
  throw new Error('Invalid blog post format');
}

// Extract frontmatter and content
const frontmatter = frontmatterMatch[1];
const markdownContent = frontmatterMatch[2];

// Parse frontmatter fields
const title = frontmatter.match(/title:\s*"([^"]+)"/)?.[1] || 'Untitled';
const date = frontmatter.match(/date:\s*"([^"]+)"/)?.[1] || '';
const description = frontmatter.match(/description:\s*"([^"]+)"/)?.[1] || '';

// Simple markdown to HTML conversion with link support including video support
const htmlContent = markdownContent
  .replace(/^# (.+)$/gm, '<h1>$1</h1>')
  .replace(/^## (.+)$/gm, '<h2>$1</h2>')
  .replace(/^### (.+)$/gm, '<h3>$1</h3>')
  .replace(/\*\*(.+?)\*\*/g, '<strong>$1</strong>')
  .replace(/\*(.+?)\*/g, '<em>$1</em>')
  .replace(/!\[([^\]]*)\]\(([^)]+)\)/g, (match, alt, src) => {
    // Check if it's a video file based on extension
    if (src.match(/\.(mp4|webm|ogg|mov|avi|wmv)$/i)) {
      const videoType = src.split('.').pop().toLowerCase();
      const mimeType = videoType === 'mov' ? 'mp4' : videoType;
      return `<figure class="video-container">
        <video width="100%" controls>
          <source src="${src}" type="video/${mimeType}">
          Your browser does not support the video tag.
        </video>
        ${alt ? `<figcaption>${alt}</figcaption>` : ''}
      </figure>`;
    }
    // Otherwise treat as image
    return `<figure><img src="${src}" alt="${alt}" /><figcaption>${alt}</figcaption></figure>`;
  })
  .replace(/\[([^\]]+)\]\(([^)]+)\)/g, '<a href="$2" target="_blank" rel="noopener noreferrer">$1</a>')
  .replace(/^- (.+)$/gm, '<li>$1</li>')
  .replace(/(<li>.*<\/li>)/s, '<ul>$1</ul>')
  .replace(/```(\w+)?\n([\s\S]*?)```/g, '<pre><code>$2</code></pre>')
  .replace(/`([^`]+)`/g, '<code>$1</code>')
  .replace(/\n\n/g, '</p><p>')
  .replace(/^(?!<[h1-6]|<ul|<pre|<li|<figure|<video)(.+)$/gm, '<p>$1</p>')
  .replace(/<p><\/p>/g, '');
---

<Layout>
  <main class="blog-post">
    <!-- Back to blogs link -->
    <nav class="blog-nav">
      <a href="/blogs" class="back-link">‚Üê back</a>
    </nav>
    
    <!-- Blog post header with title and date (no separator line) -->
    <header class="blog-header">
      <h1 class="blog-title">{title}</h1>
      <time class="blog-date">{date}</time>
    </header>
    
    <!-- Blog post content with minimal styling -->
    <article class="blog-content" set:html={htmlContent} />
  </main>
</Layout>

<style is:global>
  /* Re-enable scrolling for blog post pages */
  html, body {
    overflow: auto !important;
    height: auto !important;
  }
</style>

<style>
  /* Main blog post container with centered content but left-aligned text */
  .blog-post {
    max-width: 1000px;
    margin: 0 auto;
    padding: 7rem 2rem 2rem; /* Add top padding to account for fixed header */
    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
    font-weight: bold;
    line-height: 1.6;
  }

  /* Navigation back to blog list */
  .blog-nav {
    margin-bottom: 2rem;
  }

  .back-link {
    color: #000;
    text-decoration: none;
    font-size: 1rem;
    font-weight: bold;
    transition: opacity 0.2s ease;
  }

  .back-link:hover {
    opacity: 0.7;
  }

  /* Blog post header styling (no separator line) */
  .blog-header {
    text-align: left;
    margin-bottom: 3rem;
    /* Removed border-bottom */
  }

  .blog-title {
    font-size: 2.5rem;
    font-weight: bold;
    color: #000;
    margin-bottom: 0.5rem;
    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
  }

  .blog-date {
    display: block;
    color: #000;
    font-size: 1rem;
    font-weight: bold;
    margin-bottom: 0;
  }

  /* Blog content styling with left-aligned text in centered container */
  .blog-content {
    text-align: left;
    color: #000;
    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
    font-weight: bold;
  }



  /* Figure container for images with captions */
  .blog-content :global(figure) {
    margin: 2rem 0;
    text-align: center;
  }

  /* Ensure images scale down to fit the content area */
  .blog-content :global(figure img) {
    max-width: 80%;
    height: auto;
    display: block;
    margin: 0 auto;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

  /* Image caption styling */
  .blog-content :global(figcaption) {
    margin-top: 0.5rem;
    font-size: 1rem;
    color: #666;
    font-weight: bold;
    font-style: normal;
    text-align: center;
  }

  /* Video container styling */
  .blog-content :global(.video-container) {
    margin: 2rem 0;
    text-align: center;
  }

  /* Video styling */
  .blog-content :global(video) {
    max-width: 100%;
    height: auto;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    margin: 0 auto;
    display: block;
  }

  /* Headings within blog content */
  .blog-content :global(h1),
  .blog-content :global(h2),
  .blog-content :global(h3) {
    margin: 2rem 0 1rem 0;
    color: #000;
    font-weight: bold;
    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
  }

  .blog-content :global(h2) {
    font-size: 1.8rem;
  }

  .blog-content :global(h3) {
    font-size: 1.4rem;
  }

  /* Paragraphs with proper spacing */
  .blog-content :global(p) {
    margin: 1.5rem 0;
    color: #000;
    font-weight: bold;
  }

  /* List styling */
  .blog-content :global(ul) {
    margin: 1.5rem 0;
  }

  .blog-content :global(li) {
    margin: 0.5rem 0;
    color: #000;
    font-weight: bold;
  }

  /* Code styling */
  .blog-content :global(code) {
    background: #f5f5f5;
    padding: 0.2rem 0.4rem;
    border-radius: 3px;
    font-family: 'Monaco', 'Menlo', monospace;
    font-size: 0.9rem;
    font-weight: normal;
  }

  .blog-content :global(pre) {
    background: #f5f5f5;
    padding: 1.5rem;
    border-radius: 8px;
    overflow-x: auto;
    margin: 2rem 0;
  }

  .blog-content :global(pre code) {
    background: none;
    padding: 0;
    font-weight: normal;
  }

  /* Link styling */
  .blog-content :global(a) {
    color: #650060;
    text-decoration: underline;
    font-weight: bold;
    transition: opacity 0.2s ease;
  }

  .blog-content :global(a:hover) {
    opacity: 0.7;
  }

  /* Strong and emphasis styling */
  .blog-content :global(strong) {
    font-weight: bold;
    color: #000;
  }

  .blog-content :global(em) {
    font-style: italic;
    font-weight: bold;
    color: #000;
  }

  /* Responsive design for mobile */
  @media (max-width: 768px) {
    .blog-post {
      padding: 1rem;
    }
    
    .blog-title {
      font-size: 2rem;
    }
  }
</style> 
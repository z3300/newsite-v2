---
import Layout from '../layouts/Layout.astro';
import { readdir, readFile } from 'fs/promises';
import { join } from 'path';

// Read all markdown files from the blog content directory
const blogDir = join(process.cwd(), 'src/content/blog');
const blogFiles = await readdir(blogDir);

// Extract frontmatter data from each blog post
const blogs = await Promise.all(
  blogFiles
    .filter(file => file.endsWith('.md'))
    .map(async (file) => {
      const content = await readFile(join(blogDir, file), 'utf-8');
      const frontmatterMatch = content.match(/^---\n([\s\S]*?)\n---/);
      
      if (frontmatterMatch) {
        const frontmatter = frontmatterMatch[1];
        const title = frontmatter.match(/title:\s*"([^"]+)"/)?.[1] || 'Untitled';
        const date = frontmatter.match(/date:\s*"([^"]+)"/)?.[1] || '';
        
        return {
          slug: file.replace('.md', ''),
          title,
          date
        };
      }
      return null;
    })
);

// Filter out any null entries and sort by date (newest first)
const validBlogs = blogs.filter((blog): blog is NonNullable<typeof blog> => blog !== null).sort((a, b) => 
  new Date(b.date).getTime() - new Date(a.date).getTime()
);
---

<Layout>
  <main class="blog-list">
    <!-- Page title -->
    <h1>Blog Posts</h1>
    
    <!-- Blog posts list with minimal styling -->
    <div class="posts-container">
      {validBlogs.map((blog) => (
        <div class="blog-item">
          <!-- Clickable blog date with title -->
          <a href={`/post/${blog.slug}`} class="blog-link">
            {blog.date} â€“ {blog.title}
          </a>
        </div>
      ))}
    </div>
  </main>
</Layout>

<style is:global>
  /* Re-enable scrolling for blog pages */
  html, body {
    overflow: auto !important;
    height: auto !important;
  }
</style>

<style>
  /* Main container with centered content but left-aligned text */
  .blog-list {
    max-width: 600px;
    margin: 0 auto;
    padding: 7rem 2rem 2rem; /* Add top padding to account for fixed header */
    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
    font-weight: bold;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: left;
    min-height: calc(100vh - 7rem);
  }

  /* Page title styling */
  h1 {
    font-size: 2.5rem;
    margin-bottom: 5rem;
    font-weight: bold;
    color: #000;
    text-align: left;
    width: 100%;
  }

  /* Container for all blog posts */
  .posts-container {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    width: 100%;
    align-items: left;
  }

  /* Individual blog item (no box styling) */
  .blog-item {
    /* No padding, borders, or background */
  }

  /* Blog title and date link styling */
  .blog-link {
    text-decoration: none;
    color: #000;
    font-weight: bold;
    font-size: 1.2rem;
    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
    transition: opacity 0.2s ease;
    display: block;
    text-align: left;
    width: 100%;
  }

  .blog-link:hover {
    opacity: 0.5;
  }

  /* Responsive design for mobile */
  @media (max-width: 768px) {
    .blog-list {
      padding: 1rem;
    }
    
    h1 {
      font-size: 2rem;
      margin-top: 10rem;
    }
    
    .blog-link {
      font-size: 1.1rem;
    }
  }
</style> 